{"version":3,"file":"static/js/565.7ab2cd9b.chunk.js","mappings":"+PAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,8FACpBD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrB,mFAAH,qDAInBG,EAAY,mCAAG,WAAMC,GAAN,iFACbH,EAAAA,EAAAA,IAAA,gBAA2B,CACtCI,OAAQ,CACND,MAAAA,EACAE,QAASN,KAJa,mFAAH,sDASZO,EAAc,mCAAG,WAAMC,GAAN,iFACfP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCR,IADnB,mFAAH,qD,sFCqC3B,UAnDe,WACb,OAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAOMd,EAAQa,EAAaE,IAAI,SAU/B,OARAC,EAAAA,EAAAA,YAAU,WACJhB,IACFD,EAAAA,EAAAA,IAAaC,GAAOiB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC1BT,EAAQS,EAAKC,QACd,GAEJ,GAAE,CAACnB,KAGF,iCACE,2CACA,kBAAMoB,SAlBa,SAAAC,GACrBA,EAAEC,iBACFR,EAAgBR,EAAQ,CAAEN,MAAOM,GAAU,CAAC,EAC7C,EAeG,WACE,kBACEiB,SAAU,SAAAF,GAAC,OAAId,EAASc,EAAEG,OAAOlB,MAAtB,EACXA,MAAOA,EACPmB,KAAK,OACLC,KAAK,WACLC,YAAY,oBAEd,2CAEF,mBACA,wBACGnB,GACCA,EAAKoB,KAAI,SAAAC,GAAE,OACT,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMrB,GAAYsB,GAAE,kBAAaH,EAAGzB,IAAnD,SACGyB,EAAGI,kBAFCJ,EAAGzB,GADH,QAUpB,C","sources":["api/search.movies.js","pages/Search.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b422b72395b3e9533bb19f65b9dae17c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const searchMovies = async query => {\n  return await axios.get(`/search/movie`, {\n    params: {\n      query,\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieById = async id => {\n  return await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { searchMovies } from '../api/search.movies';\n\nconst Search = () => {\n  const [value, setValue] = useState('');\n  const [list, setList] = useState('');\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmitSearch = e => {\n    e.preventDefault();\n    setSearchParams(value ? { query: value } : {});\n  };\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      searchMovies(query).then(({ data }) => {\n        setList(data.results);\n      });\n    }\n  }, [query]);\n\n  return (\n    <>\n      <h1>Search movies</h1>\n      <form onSubmit={onSubmitSearch}>\n        <input\n          onChange={e => setValue(e.target.value)}\n          value={value}\n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"Search film...\"\n        />\n        <button>Search</button>\n      </form>\n      <hr />\n      <ul>\n        {list &&\n          list.map(el => (\n            <li key={el.id}>\n              <Link state={{ from: location }} to={`/movies/${el.id}`}>\n                {el.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;\n"],"names":["API_KEY","axios","fetchTrendingMovies","searchMovies","query","params","api_key","fetchMovieById","id","useState","value","setValue","list","setList","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","then","data","results","onSubmit","e","preventDefault","onChange","target","type","name","placeholder","map","el","state","from","to","original_title"],"sourceRoot":""}